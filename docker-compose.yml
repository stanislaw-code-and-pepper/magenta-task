version: "3"
services:
  orders:
    build: ./orders
    restart: always
    hostname: orders
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - orders_db
    networks:
      - services

  orders_db:
    image: "mongo:latest"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Str0000ngPassword!
      MONGO_INITDB_DATABASE: orders
      MONGO_USER: orders
      MONGO_PASSWORD: Password123
    ports:
      - 27017:27017
    networks:
      - services
    volumes:
      - "./db/orders-data/db-files:/data/db"
      - "./db/init/:/docker-entrypoint-initdb.d/"

  products:
    build: ./products
    restart: always
    hostname: products
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - products_db
    networks:
      - services
    ports:
      - 3000:3000

  products_db:
    image: "mongo:latest"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Str0000ngPassword!
      MONGO_INITDB_DATABASE: products
      MONGO_USER: products
      MONGO_PASSWORD: Password123
    ports:
      - 27018:27017
    networks:
      - services
    volumes:
      - "./db/products-data/db-files:/data/db"
      - "./db/init/:/docker-entrypoint-initdb.d/"

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - services
    volumes:
      - .rabbitmq/data/:/var/lib/rabbitmq/
      - .rabbitmq/log/:/var/log/rabbitmq

networks:
  services:
    driver: bridge
